spring.application.name=api-insurances-customers

server.port = 8081

springdoc.swagger-ui.path=/swagger-ui.html

logging.level.org.springframework=INFO
logging.level.feign=DEBUG

# Config CircuitBreaker
resilience4j.circuitbreaker.instances.api-customer-circuit-breaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.api-customer-circuit-breaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.api-customer-circuit-breaker.waitDurationInOpenState=10000
resilience4j.circuitbreaker.instances.api-customer-circuit-breaker.permittedNumberOfCallsInHalfOpenState=3

# Config Retry
resilience4j.retry.instances.api-customer-retry.maxAttempts=3
resilience4j.retry.instances.api-customer-retry.waitDuration=5s
resilience4j.retry.instances.api-customer-retry.enable-exponential-backoff=true
resilience4j.retry.instances.api-customer-retry.exponential-backoff-multiplier=2
resilience4j.retry.instances.api-customer-retry.enable-randomized-wait=true
resilience4j.retry.instances.api-customer-retry.randomized-wait-factor=0.5

logging.level.io.github.resilience4j=DEBUG
logging.level.io.github.resilience4j.circuitbreaker=DEBUG


spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres-insurances:5432/insurances_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}